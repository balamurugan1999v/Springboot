Springboot

What is springboot:
	Springboot is java based spring framework used in Java web application
	It is used to build microservice based application
	It is used rapidly build the application with less no of configurations
	It is having build in servers like tomcat and jetty.
	
What is the advantage of Springboot over Spring:
	Auto configuration - Spring boot automatically configures the jar dependencies which is in the classpath of the project.
	@EnableAutoConfiguration - is the annotation used of this
	It is automatically configure the default error page, dispatcher servlet, datasource and configure webjars
	
Annotations:
	@SpringBootApplication - This annotation used in the main class of the application.
		It encapsulates @SpringBootConfiguration, @EnableAutoConfiguration and @ComponentScan annotations.
	
		Example:
		@SpringBootApplication
		public class DemoApplication{
			public static void main(String args[]){
				SpringApplication.run(DemoApplication.class, args);
			}
		}
		
	@SpringBootConfiguration - 
		It is the automated version of @Configuration annotation in Spring.
		In Most of the SpringBoot application using this feature via @SpringBootApplication annoatation.
		
	@RestController - It is used to create Controller class, which contains both @Controller and @ResponseBody
	
	@Column - It is used to specify the column name we used in the tables.
		@Column(name = "Student_name") 
	@Table - This we use at class level and mention the entity class with the table name.
		@Table(name = "Student") 
	@Transient - It is used to skip the persistance in the entity class.
	
Important topics I want to understand
`	1. Bean - It is an object managed by Spring Inversion Of Control(IOC) container. IOC is responsible for initialing, assemblibg and running the Bean.
		Bean lifecycle - it is managed by IOC Container which is from bean creation to destroy
		Bean scope - The way it is created, shared and used through out the application lifecycle
		Bean factory
		
	2. Configuration -  It is used to configure the dependencies which is present in the project classpath
	3. ComponentScan - It is used to scan the components and beans inside the package to provide it to configuration to configure.
	4. How to connect to H2 database by using springboot default H2 DB.
		Add the h2 depedency in pom.xml 
			<dependency>
				<groupId>com.h2database</groupId>
				<artifactId>h2</artifactId>
				<scope>runtime</scope>
			</dependency>
		Add the datasource URL, username, password, driver in application.properties
			#H2 Database
			spring.datasource.url = jdbc:h2:mem:sampledb  -- Here sampledb is the db name
			spring.datasource.driverClassName = org.h2.Driver 
			spring.datasource.username = sa
			spring.datasource.password = pass - It is the password, we can create as required.
			spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
			spring.h2.console.enabled=true -- If it is enabled then we can see the database console.  Link will be http://localhost:portNumber/h2-console
	5. Dependancy Injection - It is providing the dependencies to the beans automatically.
	6. IOC - Inversion of Controller
	7. Dispatcher Servlet
		It is used when we receive a request and serve it to the respective controller.
		In Manual configuration, we need to setup this in web.xml file but here springboot automatically configure for us.
	8. Spring IOC Container:
		- It is implementing the IOC framework.
		
Hibernate:
	Hibernate is one of the feature in springboot.
	Here instead of writing the queries we can directly accessing the high level api by java object models.
	JPA (Java Persistance API) is used to perform the Hibernate operations by using @Entity classes.
	In pom need to add the spring-boot-starter-data-jpa dependancy and datasource data in application.properties will used for Hibernate
		
RestApiCall:
	https://howtodoinjava.com/spring-boot2/resttemplate/spring-restful-client-resttemplate-example/
	https://stackoverflow.com/questions/30337582/spring-boot-configure-and-use-two-data-sources